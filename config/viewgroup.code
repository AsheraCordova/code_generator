class ViewGroup {
	private View[] mChildren = new View[ARRAY_INITIAL_CAPACITY];
	boolean isViewTransitioning(View view){
		return false;
	}
	
	
	public Rect getPaddingMaskBounds() {
		int flags = mGroupFlags;
		final boolean clipToPadding = (flags & FLAG_CLIP_TO_PADDING) == FLAG_CLIP_TO_PADDING;
		Rect rect = new Rect();
		if (clipToPadding) {
			rect.left=mPaddingLeft;
			rect.top=mPaddingTop;
			rect.right=getWidth()-mPaddingRight;
			rect.bottom=getHeight()-mPaddingBottom;
		}
		return rect;
	}
public void bringToFront() {
	// TODO Auto-generated method stub
	
}	
public void incrementChildUnhandledKeyListeners(){
	// TODO Auto-generated method stub
	
}	
	  	
  	@Override
	public void invalidateChild(View child, Rect r) {
		
		
	}
	@Override
	public void recomputeViewAttributes(View child) {
		
		
	}
	@Override
	public void focusableViewAvailable(View v) {
		
		
	}

	public void cancel(String disappearing2) {
		
		
	}

	public void cancel() {
		
		
	}

	public boolean isChangingLayout() {
		
		return false;
	}

	public void cancel(int disappearing2) {
		
		
	}

	public void layoutChange(ViewGroup viewGroup) {
		
		
	}
	
  	protected LayoutParams generateLayoutParams(  ViewGroup.LayoutParams p){
    	return p;
  	}
  	private void requestChildFocus(View child, Object findFocus) {
	}
	private void needGlobalAttributesUpdate(boolean b) {
	}

	private void childHasTransientStateChanged(View child, boolean b) {
	}	

private void notifyGlobalFocusCleared(Object viewGroup) {
	// TODO Auto-generated method stub
	
}
private boolean rootViewRequestFocus() {
	// TODO Auto-generated method stub
	return false;
}
private void clearChildFocus(View view) {
	// TODO Auto-generated method stub
	
}
private void addDisappearingView(View view) {
	// TODO Auto-generated method stub
	
}
private void cancelHoverTarget(View view) {
	// TODO Auto-generated method stub
	
}
private void cancelTouchTarget(View view) {
	// TODO Auto-generated method stub
	
}
  private void touchAccessibilityNodeProviderIfNeeded(View child) {
    // TODO Auto-generated method stub
    
}
private void setDefaultFocus(View child) {
    // TODO Auto-generated method stub
    
}
private void notifyChildOfDragStart(View child) {
    // TODO Auto-generated method stub
 }
   private void dispatchVisibilityAggregated(boolean b) {
    // TODO Auto-generated method stub
    
}
 
   private void clearFocusedInCluster(View view) {
    // TODO Auto-generated method stub
    
}
  private void decrementChildUnhandledKeyListeners() {
    // TODO Auto-generated method stub
    
}
  private void clearDefaultFocus(View view) {
    // TODO Auto-generated method stub
    
}
 
 	class DragEvent {
	}
	LayoutTransition mTransition;
	public class LayoutTransition {
		public static final int DISAPPEARING = 0;
		public void showChild(ViewGroup viewGroup, View child, int oldVisibility) {
		
		
		}
		public void addChild(ViewGroup viewGroup, View child) {
		}
		public void cancel(int disappearing2) {
		}
		public void removeChild(ViewGroup viewGroup, View view) {
		}
	}

}