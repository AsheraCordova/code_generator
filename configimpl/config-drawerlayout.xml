<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Widgets>
    <Widget defaultGeneratorUrl="https://github.com/AsheraCordova/Drawer"  baseDirectory="../../core-android-widget/AndroidNavigationDrawerPlugin" classname="DrawerLayoutImpl" createDefault="asnativewidget|nativecreate|postSetAttribute|ExcludeDefStyleRes|" generateXmlTestCase="true" group="androidx.drawerlayout.widget.DrawerLayout" jstemplate="widgettemplate.js" name="androidx.drawerlayout.widget.DrawerLayout" nativeclassname="androidx.drawerlayout.widget.DrawerLayout" os="android" packageName="androidx.drawerlayout.widget" prefix="" template="BaseHasWidgetsTemplate.java" >
        <CustomAttribute generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" name="elevation" javaType="float" type="dimensionfloat" code="setDrawerElevation" getterCode="getDrawerElevation" namespace="android"/>
        <CustomAttribute code="setDrawerElevation" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="float" name="drawerElevation" namespace="default" />
        <CustomAttribute code="setScrimColor" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="int" name="scrimColor" namespace="default" type="color" />
        <CustomAttribute code="setDrawerLockMode" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="int" name="drawerLockMode" namespace="default" type="drawerLockMode" converterInfo1="LOCK_MODE_UNLOCKED,LOCK_MODE_LOCKED_CLOSED,LOCK_MODE_LOCKED_OPEN,LOCK_MODE_UNDEFINED" converterInfo2="0,1,2,3" />
        <CustomAttribute code="setStatusBarBackground" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="Drawable" name="statusBarBackground" namespace="default" type="drawable" />
        <CustomAttribute code="setStatusBarBackgroundColor" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="int" name="statusBarBackgroundColor" namespace="default" type="drawable" ignore="true" />
        <CustomAttribute code="setDragger" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="ViewDragHelper" name="dragger" namespace="default" />
        <CustomAttribute code="setDrawerListener" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" ignore="true" javaType="DrawerListener" listenerClassName="DrawerLayout.DrawerListener" name="drawer" namespace="default" type="string" >
            <ListenerMethod>void onDrawerSlide(View drawerView, float slideOffset)</ListenerMethod>
            <ListenerMethod>void onDrawerOpened(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerClosed(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerStateChanged(int newState)</ListenerMethod>
        </CustomAttribute>
        <CustomAttribute code="code:if (objValue instanceof String) {setDrawerListener(new DrawerListener(this, strValue, &quot;onDrawerSlide&quot;));} else {setDrawerListener((DrawerLayout.DrawerListener) objValue);}" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="DrawerListener" listenerClassName="DrawerLayout.DrawerListener" name="onDrawerSlide" namespace="default" type="string" >
            <ListenerMethod>void onDrawerSlide(View drawerView, float slideOffset)</ListenerMethod>
            <ListenerMethod>void onDrawerOpened(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerClosed(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerStateChanged(int newState)</ListenerMethod>
        </CustomAttribute>
        <CustomAttribute code="code:if (objValue instanceof String) {setDrawerListener(new DrawerListener(this, strValue, &quot;onDrawerOpened&quot;));} else {setDrawerListener((DrawerLayout.DrawerListener) objValue);}" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="DrawerListener" listenerClassName="DrawerLayout.DrawerListener" name="onDrawerOpened" namespace="default" type="string" >
            <ListenerMethod>void onDrawerSlide(View drawerView, float slideOffset)</ListenerMethod>
            <ListenerMethod>void onDrawerOpened(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerClosed(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerStateChanged(int newState)</ListenerMethod>
        </CustomAttribute>
        <CustomAttribute code="code:if (objValue instanceof String) {setDrawerListener(new DrawerListener(this, strValue, &quot;onDrawerClosed&quot;));} else {setDrawerListener((DrawerLayout.DrawerListener) objValue);}" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="DrawerListener" listenerClassName="DrawerLayout.DrawerListener" name="onDrawerClosed" namespace="default" type="string" >
            <ListenerMethod>void onDrawerSlide(View drawerView, float slideOffset)</ListenerMethod>
            <ListenerMethod>void onDrawerOpened(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerClosed(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerStateChanged(int newState)</ListenerMethod>
        </CustomAttribute>
        <CustomAttribute code="code:if (objValue instanceof String) {setDrawerListener(new DrawerListener(this, strValue, &quot;onDrawerStateChange&quot;));} else {setDrawerListener((DrawerLayout.DrawerListener) objValue);}" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="DrawerListener" listenerClassName="DrawerLayout.DrawerListener" name="onDrawerStateChange" namespace="default" type="string" >
            <ListenerMethod>void onDrawerSlide(View drawerView, float slideOffset)</ListenerMethod>
            <ListenerMethod>void onDrawerOpened(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerClosed(View drawerView)</ListenerMethod>
            <ListenerMethod>void onDrawerStateChanged(int newState)</ListenerMethod>
        </CustomAttribute>
        <CustomAttribute applyBeforeChildAdd="true" code="code:setDrawerGravity(objValue);" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="int" name="drawerGravity" namespace="default" type="gravity" />
        <CustomAttribute code="addDrawerListener" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="DrawerListener" name="addDrawer" namespace="default" type="string" useMethodName="true" ignore="true"/>
        <CustomAttribute code="removeDrawerListener" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="DrawerListener" name="removeDrawer" namespace="default" type="string" useMethodName="true" ignore="true"/>
        <CustomAttribute generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="Drawable" name="statusBarBackgroundDrawable" namespace="default" type="drawable" ignore="true" />
        <CustomAttribute code="openDrawer" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="int" name="openDrawer" namespace="default" type="gravity" useMethodName="true" updateUiFlag="UPDATE_UI_REQUEST_LAYOUT"/>
        <CustomAttribute code="closeDrawer" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="int" name="closeDrawer" namespace="default" type="gravity" useMethodName="true" />
        <CustomAttribute getterCode="isOpen" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="boolean" name="open" namespace="default" type="boolean" useMethodName="true" readOnly="true" ignore="true" />
        <CustomAttribute getterCode="code:isOpenStart()" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="boolean" name="isOpenStart" namespace="default" type="boolean" useMethodName="true" readOnly="true" />
        <CustomAttribute getterCode="code:isOpenEnd()" generatorUrl="https://developer.android.com/reference/androidx/drawerlayout/widget/DrawerLayout" javaType="boolean" name="isOpenEnd" namespace="default" type="boolean" useMethodName="true" readOnly="true" />
        <CustomAttribute code="code:setEdgeSize(objValue);" generatorUrl="https://stackoverflow.com/questions/17699869/how-to-show-the-drawerlayout-when-sliding-from-left-to-right-no-matter-where" javaType="boolean" name="edgeSize" namespace="default" type="dimension" useMethodName="true" />
    </Widget>
    <Widget defaultGeneratorUrl="https://github.com/AsheraCordova/Drawer"  baseDirectory="../../core-javafx-widget/SWTNavigationDrawerPlugin" classname="DrawerLayoutImpl" createDefault="asnativewidget|nativecreate|smoothSlideViewTo|" generateXmlTestCase="true" group="androidx.drawerlayout.widget.DrawerLayout" jstemplate="widgettemplate.js" name="androidx.drawerlayout.widget.DrawerLayout" nativeclassname="androidx.drawerlayout.widget.DrawerLayout" os="swt" packageName="androidx.drawerlayout.widget" prefix="" template="BaseHasWidgetsTemplate.java" >
        <CustomAttribute code="code:openDrawer(objValue);" javaType="int" name="openDrawer" namespace="default" type="gravity" useMethodName="true" />
        <CustomAttribute code="code:closeDrawer(objValue);" javaType="int" name="closeDrawer" namespace="default" type="gravity" useMethodName="true" />
        <CustomAttribute code="code:setAnimationDuration(objValue);" javaType="int" name="animationDurationInMs" namespace="default" type="int" />
        
        <CopyAttribute widget="DrawerLayoutImpl" attribute="isOpenStart|isOpenEnd|onDrawerSlide|onDrawerOpened|onDrawerClosed|onDrawerStateChange|drawerGravity|drawerLockMode|edgeSize" onlyForTestCase="false" os="android"/>
        <Code url="../../core-android-widget/AndroidNavigationDrawerPlugin/src/com/ashera/drawerlayout/DrawerLayoutImpl.java">
                <Copy from="drawer" to="drawer">
                </Copy>
         </Code>
    </Widget>
    <Widget defaultGeneratorUrl="https://github.com/AsheraCordova/Drawer"  baseDirectory="../../core-ios-widgets/IOSNavigationDrawerPlugin" classname="DrawerLayoutImpl" createDefault="asnativewidget|nativecreate|smoothSlideViewTo|nativeMakeFrameForChildWidget|" generateXmlTestCase="true" group="androidx.drawerlayout.widget.DrawerLayout" jstemplate="widgettemplate.js" name="androidx.drawerlayout.widget.DrawerLayout" nativeclassname="androidx.drawerlayout.widget.DrawerLayout" os="ios" packageName="androidx.drawerlayout.widget" prefix="" template="BaseHasWidgetsTemplate.java" >
        <CustomAttribute code="code:openDrawer(objValue);" javaType="int" name="openDrawer" namespace="default" type="gravity" useMethodName="true" />
        <CustomAttribute code="code:closeDrawer(objValue);" javaType="int" name="closeDrawer" namespace="default" type="gravity" useMethodName="true" />
        <CustomAttribute code="code:setScrimColor(objValue);" javaType="int" name="scrimColor" namespace="default" type="color" />
        
        <CopyAttribute widget="DrawerLayoutImpl" attribute="isOpenStart|isOpenEnd|onDrawerSlide|onDrawerOpened|onDrawerClosed|onDrawerStateChange|drawerGravity|drawerLockMode|edgeSize" onlyForTestCase="false" os="android"/>
        <CustomAttribute code="code:setAnimationDuration(objValue);" javaType="int" name="animationDurationInMs" namespace="default" type="int" />
        <Code url="../../core-android-widget/AndroidNavigationDrawerPlugin/src/com/ashera/drawerlayout/DrawerLayoutImpl.java">
                <Copy from="drawer" to="drawer">
                </Copy>
         </Code>
         
        <Code url="../../core-javafx-widget/SWTNavigationDrawerPlugin/src/main/java/com/ashera/drawerlayout/DrawerLayoutImpl.java">
                <Copy from="drawer" to="drawer">
                </Copy>
                <Copy from="animationduration" to="animationduration">
                </Copy>
         </Code>
    </Widget>
    
   <Widget defaultGeneratorUrl="https://github.com/AsheraCordova/Drawer"  baseDirectory="../../core-web-widget/WebNavigationDrawerPlugin" classname="DrawerLayoutImpl" createDefault="asnativewidget|nativecreate|smoothSlideViewTo|" generateXmlTestCase="true" group="androidx.drawerlayout.widget.DrawerLayout" jstemplate="widgettemplate.js" name="androidx.drawerlayout.widget.DrawerLayout" nativeclassname="androidx.drawerlayout.widget.DrawerLayout" os="web" packageName="androidx.drawerlayout.widget" prefix="" template="BaseHasWidgetsTemplate.java" >
        <CustomAttribute code="code:openDrawer(objValue);" javaType="int" name="openDrawer" namespace="default" type="gravity" useMethodName="true" />
        <CustomAttribute code="code:closeDrawer(objValue);" javaType="int" name="closeDrawer" namespace="default" type="gravity" useMethodName="true" />
        <CustomAttribute code="code:setScrimColor(objValue);" javaType="int" name="scrimColor" namespace="default" type="color" />
        
        <CopyAttribute widget="DrawerLayoutImpl" attribute="isOpenStart|isOpenEnd|onDrawerSlide|onDrawerOpened|onDrawerClosed|onDrawerStateChange|drawerGravity|drawerLockMode|edgeSize" onlyForTestCase="false" os="android"/>
        <CustomAttribute code="code:setAnimationDuration(objValue);" javaType="int" name="animationDurationInMs" namespace="default" type="int" />
        <Code url="../../core-android-widget/AndroidNavigationDrawerPlugin/src/com/ashera/drawerlayout/DrawerLayoutImpl.java">
                <Copy from="drawer" to="drawer">
                </Copy>
         </Code>
         
        <Code url="../../core-javafx-widget/SWTNavigationDrawerPlugin/src/main/java/com/ashera/drawerlayout/DrawerLayoutImpl.java">
                <Copy from="drawer" to="drawer">
                </Copy>
                <Copy from="animationduration" to="animationduration">
                </Copy>
         </Code>
    </Widget>
</Widgets>
