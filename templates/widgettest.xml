<#include "/templates/widgettest_listview.xml">
<#include "/templates/widgettest_recycleview.xml">
<#include "/templates/widgettest_spinner.xml">
<#include "/templates/widgettest_textview.xml">
<#include "/templates/widgettest_drawerlayout.xml">
<#include "/templates/widgettest_toolbar.xml">
<#include "/templates/widgettest_datepicker.xml">
<#include "/templates/widgettest_progressbar.xml">
<#macro getName name namespace=''>
<#compress>
	<#if name?starts_with("swt") || name?starts_with("ios")>
		${name}
	<#elseif name?starts_with("border") || name == 'backgroundRepeat' || name == 'foregroundRepeat' || name == 'selectAll' || (name?starts_with("on") && name != 'onClick') ||name == 'onEditorAction' || name == 'startOrStopMarquee' || name=='onChecked' || name=='onChildViewRemoved' || name=='onChildViewAdded' || name=='layout_removeAllRules' || name == 'layout_removeRule'
			|| name?starts_with("android:") || name == 'startStop' || name=='layout_orientation' || myclass.localName == 'com.ashera.ui.android.Model' || name?contains('Model') || name?contains('model') || name == 'listitem' || name == 'notifyDataSetChanged' || name?contains('CapInsets') || name?starts_with("capInsets") || name == 'selected' || name='fileExtension' || name='invalidate' || name='requestLayout' || name="asDragSource" || name="performHapticFeedback" || name="performHapticFeedbackWithFlags"  || name="backgroundWithState"
			|| name == "layout_horizontalBias" || name=='layout_verticalBias' || name=="optimizationLevel" || name=='addViewToCircularFlow'|| name=='updateReference' || name=='updateAngle' || name=='updateRadius'
			|| name=='viewHolderIds' || name=='adapterConfig' || namespace == 'default'>
		${name}
	<#elseif namespace != ''>
		${namespace}:${name}		
	<#elseif name?starts_with("layout_constrain") || name?starts_with("layout_gone") || name?starts_with("layout_editor") || name == 'constraint_referenced_ids' || name=='barrierDirection'
		|| name=='layout_wrapBehaviorInParent'>	
		app:${name}	
	<#else>
		android:${name}
	</#if>
</#compress>	
</#macro>


<#macro getAdditinalAttrs attrs name value id localname widgetname>
<#compress>
		
		<@getAdditinalAttrs_ListView attrs=attrs name=name value=value id=id localname=localname widgetname=widgetname></@getAdditinalAttrs_ListView>
		<@getAdditinalAttrs_Recycleview attrs=attrs name=name value=value id=id localname=localname widgetname=widgetname></@getAdditinalAttrs_Recycleview>
		<@getAdditinalAttrs_Spinner attrs=attrs name=name value=value id=id localname=localname widgetname=widgetname></@getAdditinalAttrs_Spinner>
		<@getAdditinalAttrs_TextView attrs=attrs name=name value=value id=id localname=localname widgetname=widgetname></@getAdditinalAttrs_TextView>
		<@getAdditinalAttrs_Toolbar attrs=attrs name=name value=value id=id localname=localname widgetname=widgetname></@getAdditinalAttrs_Toolbar>
		<@getAdditinalAttrs_ProgressBar attrs=attrs name=name value=value id=id localname=localname widgetname=widgetname></@getAdditinalAttrs_ProgressBar>
		
		<#if (name == 'hint' || name == 'textColorHint') && widgetname=='UITextView'>
			create-attr-count="1"
			create-attr-0="enableFeatures"
			enableFeatures="decorator"
		</#if>	
		<#if name == 'tint' && widgetname=='ImageButton' && process == 'ios'>
			create-attr-count="1"
			create-attr-0="enableFeatures"
			enableFeatures="UIImageRenderingModeAlwaysTemplate"
		</#if>	
	
	<#if (name == 'maxWidth' || name == 'maxHeight') && localname=='View'>
		android:text="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
	</#if>
		
	<#if name == 'textColorHighlight' && (localname=='TextView' || localname == 'com.ashera.layout.Link')>
		android:textIsSelectable="true"
	</#if>
	<#if name?starts_with("v_") || name == 'validation'>
		formGroupId="test"
	</#if>
	<#if value == '@color/color_state'>
	onHover=''
	clickable="true"
	onFocusChange=''
	</#if>
	<#if process == "swt" && name == 'password'>
	create-attr-count="1"
	create-attr-0="swtTextStyle"
	swtTextStyle="none"
	</#if>

	<#if localname == "androidx.constraintlayout.widget.Guideline" && name?starts_with('orientation')>
	app:layout_constraintGuide_begin="10dp"
	</#if>
	<#if name?starts_with('accessibility') || name?starts_with('contentDescription') || name=='importantForAccessibility' || name?starts_with('iosAccessibility')>
	android:focusable="true"
	</#if>
	<#if name == "iosInputAccessoryViewDoneButton">
	onEditorAction="onEditorAction"
	</#if>
	 
	
	<#if widgetname == 'androidx.constraintlayout.helper.widget.CircularFlow'>
		<#if name != "circularflow_viewCenter">
			app:circularflow_viewCenter="@+id/viewCenter"
		</#if>
		<#if name != "circularflow_defaultRadius">
		app:circularflow_defaultRadius="100dp"
		</#if>
		<#if name != "circularflow_defaultAngle">
		app:circularflow_defaultAngle="90"
		</#if>
		
	</#if>
	
	<#if widgetname == 'androidx.constraintlayout.helper.widget.Flow' || widgetname == 'androidx.constraintlayout.helper.widget.CircularFlow'>
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toTopOf="parent"
		<#if name != "constraint_referenced_ids">
			<#if (name == 'flow_wrapMode' || name?lower_case?contains('vertical') || name == 'flow_maxElementsWrap' || name == 'flow_horizontalAlign') && (name != 'flow_verticalBias')>
			app:constraint_referenced_ids="item_1,item_2,item_3,item_4,item_5,item_6,item_7,item_8,item_9,item_10,item_11,item_12,item_13"
			<#else>
			app:constraint_referenced_ids="item_1,item_2,item_3"
			</#if>
		</#if>
		
		<#if name?lower_case?ends_with('horizontalbias')>
			app:flow_horizontalStyle="packed"
		</#if>
		<#if name?lower_case?ends_with('verticalbias')>
			app:flow_verticalStyle="packed"
		</#if>
		<#if name?lower_case?contains('vertical') || name == 'flow_maxElementsWrap' || name == 'flow_horizontalAlign'>
		app:flow_wrapMode="chain"
		</#if>
		<#if name?lower_case?contains('vertical') && name != 'flow_verticalStyle' && !name?lower_case?ends_with('verticalbias')>
		app:flow_verticalStyle="spread"
		</#if>	
		<#if name == 'flow_horizontalAlign' || name == 'flow_verticalBias'>
		android:orientation="vertical"
		</#if>	
	</#if>
	 	

	<#if name == 'defaultFocusHighlightEnabled'>
	android:clickable="true"
	android:focusable="true"
	</#if>
	
	<#if value=='@drawable/button_selector' || value=='@drawable/drawable_color_selector' || value=='@drawable/shape_line_drawable'>android:clickable="true"</#if>
	<#if value=='@drawable/focused_selector'>onFocusChange=''</#if>
	<#if value=='@drawable/hovered_selector'>onHover=''</#if>
	
	<#if name?starts_with('outline')>
	android:elevation="20dp"
	</#if>
	
	<#if name == 'editable' || name == 'enabled'>
	android:textColor="#000"
	</#if>
	
	<#if name == 'scaleType'>
		borderWidth="1dp"
	</#if>
	<#if widgetname == 'ImageView' && name?starts_with("padding")>
		android:scaleType="fitXY"
	</#if>
	
	<#if widgetname == 'EditText' && name?starts_with("scrollHorizontally") && process == "ios">
		create-attr-count="1"
        create-attr-0="enableFeatures"
        enableFeatures="decorator|hscroll"
    </#if>

	
	<#if name == 'soundEffectsEnabled'>
	android:onClick=""
	</#if>
	<#if name == 'ignoreGravity'>
	android:gravity="right"
	</#if>
	<#if name == 'transformPivotX'>
	android:rotationX="30"
	</#if>
	<#if name == 'transformPivotY'>
	android:rotationY="30"
	</#if>
	<#if name == 'weightSum' || name == 'layout_weight'>
	android:orientation="horizontal"
	</#if>
	
	<#if name == 'foregroundGravity'>
		android:foreground="@drawable/paris"
	</#if>
	<#if name == 'swtDragDetect'>
	onDrag="onDrag"
	</#if>
	
	<#if name?starts_with('layout_row')>
		android:columnCount="3"
	</#if>	
	
	<#if name == 'longClickable'>
		onLongClick="onLongClick"
	</#if>
	
	<#if name == 'clickable'>
		android:onClick="onClick"
	</#if>
	
	<#if name == 'divider'>
		android:showDividers="middle"
	</#if>
	
	<#if name == 'dividerPadding'>
		android:divider="@drawable/cross3"
		android:showDividers="middle"
	</#if>	
	<#if name == 'showDividers'>
		android:divider="@drawable/cross3"
	</#if>	
	
	<#if widgetname == 'View' || ((myclass.viewPluginFor)?? && myclass.viewPluginFor == 'View')>
		android:layout_margin="10dp"
		<#if name != 'minHeight' && !name?starts_with('paddingTop') && !name?starts_with('paddingBottom') &&  !name?starts_with('paddingVertical')>
		android:minHeight="50dp"
		</#if>
		<#if name=='textDirection' || name=='textAlignment' || name == 'swtOrientation' || name == 'swtTextDirection' || name == 'accessibilityLiveRegion'>
		android:text="test ${value}"
		</#if>
		<#if name?starts_with('backgroundRepeat')>
		android:background="@drawable/cross3"
		</#if>
		<#if name?starts_with('foregroundRepeat')>
		android:foreground="@drawable/cross3"
		</#if>
		<#if name?starts_with('backgroundTint')>
			android:background="@drawable/cross3"
			<#if name?starts_with('foregroundTintMode') || name?starts_with('backgroundTintMode')>
				android:backgroundTint="#000"
			</#if>
		<#elseif name?starts_with('foregroundTint')>
			android:foreground="@drawable/cross3"
			<#if name?starts_with('foregroundTintMode')>
				android:foregroundTint="#000"
			</#if>			
		<#elseif name?starts_with('foregroundCap')>
		android:foreground="@drawable/button"
		<#elseif name?starts_with('cap') || name?contains('CapInsets')>
		android:background="@drawable/button"
		<#else>
		<#if !name?starts_with('background') && !name?starts_with('defaultFocusHighlightEnabled')>
		android:background="#ff0"
		</#if>
		</#if>	
		<#if name?contains("border") && (name?contains("Dash") || !name?contains("Width"))>
			borderWidth="1dp"
		</#if>	
		
		<#if name?contains("border") && (name?contains("Dash") && name?contains("Width"))>
			borderStyle="dashed"
			borderDashSpacing="1dp"
		</#if>	
		
		<#if name?contains("border") && (name?contains("Dash") && name?contains("Spacing"))>
			borderStyle="dashed"
			borderDashWidth="1dp"
		</#if>	
	</#if>	
	
	<#-- Image view -->
	<#if name == 'cropToPadding'>
		android:padding="10dp"
		android:scaleType="centerCrop"
		create-attr-count="1"
        create-attr-0="enableFeatures"
        enableFeatures="decorator"
        iosClipsToBounds="true"
	</#if>
	<#if name == 'tintMode'>
		android:tint="#000"
	</#if>
	<#if localname == 'ImageView' && (name == 'maxWidth' || name == 'maxHeight')>
		android:adjustViewBounds="true"
	</#if>	
	
	<#if localname == 'ImageView' && name?starts_with('padding')>
		create-attr-count="1"
        create-attr-0="enableFeatures"
        enableFeatures="decorator"
	</#if>
				
	<#if (localname == 'ImageView' || localname == 'ImageButton') && name != 'swtImage' && name!= 'src' && name!='imageFromUrl' && name!='imageFromUrlPlaceHolder'>
		android:src="@drawable/paris"
	</#if>
	
	<#if (localname == 'ImageView' || localname == 'ImageButton') && name == 'imageFromUrlPlaceHolder'>
		imageFromUrl="https://picsum.photos/200"
	</#if>		
	<#-- Image view -->

	<#-- text view -->
	<#if process == "swt" && name == 'swtAlwaysShowScrollBars'>
		create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="v_scroll|wrap"
	</#if>
	<#if process == "swt" && ((name == 'minHeight' || name == 'maxHeight' || name == 'height') && id == 1)>
		create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="multi|wrap"
	</#if>
	<#if process == "swt" && (name == 'singleLine' && value=='true' && localname == "EditText")>
		create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="none"
	</#if>
	<#if process == "swt" && (name == 'scrollHorizontally' && value=='true')>
		create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="h_scroll"
	</#if>
	<#if process == "web" && (name == 'scrollHorizontally' && value=='true')>
	paddingBottom-web="30dp"
	</#if>
	<#if process == "swt" && name?starts_with('border')>
		create-attr-count="1"
		create-attr-0="swtStyle"
		swtStyle="none"
	</#if>
	
	<#if localname == "ToggleButton" && name?starts_with('buttonTint')>
		android:button="@drawable/cross3"
	</#if>
	
	<#if localname == "Switch" && (name == 'textOn' || name == 'textOff' || name == 'switchTextAppearance'  || name == 'thumbTextPadding')>
		android:showText="true"
	</#if>
	
	<#if name == 'marqueeRepeatLimit' || name=='startOrStopMarquee'>
		android:ellipsize="marquee"
		android:singleLine="true"
		create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="none"
		<#if name == 'marqueeRepeatLimit'>
		selected="true"
		</#if>
	<#elseif name == 'autoSizeMaxTextSize' || name == 'autoSizeMinTextSize' || name == 'autoSizeStepGranularity'>
		android:autoSizeTextType="uniform"
	<#elseif name == 'hyphenationFrequency'>
		android:breakStrategy="high_quality"  
	<#elseif name == 'linksClickable' || name == 'textColorLink'>
		android:autoLink="all"  
	<#elseif name == 'shadowColor'>
	   android:shadowRadius="2"  
       android:shadowDx="2"
       android:shadowDy="4" 
    <#elseif name == 'shadowRadius'>
	   android:shadowColor="#ffff00"  
       android:shadowDx="2"
       android:shadowDy="4" 
    <#elseif name == 'shadowDx'>
	   android:shadowRadius="2"  
       android:shadowColor="#ffff00" 
       android:shadowDy="0" 
    <#elseif name == 'shadowDy'>
	   android:shadowRadius="2"  
       android:shadowColor="#ffff00" 
       android:shadowDx="0" 
    <#elseif name == 'drawableTint'>
		android:drawableLeft="@drawable/calatrava_cross"
	<#elseif name == 'drawableTintMode'>
		android:drawableLeft="@drawable/calatrava_cross"
		android:drawableTint="#000"
	<#elseif name == 'drawablePadding'>
		<#if id == 0>
		android:drawableLeft="@drawable/calatrava_cross"
		</#if>
		<#if id == 1>
		android:drawableRight="@drawable/calatrava_cross"
		</#if>
	<#elseif name?starts_with('ime')>
		android:inputType="text"
		<#if name == 'imeActionLabel'>
		android:imeOptions="actionGo"
		</#if>
	<#elseif name == 'digits'>
		android:inputType="number"
	<#elseif name == 'textColorHint'>
		android:hint="Please enter"
	<#elseif name == 'onEditorAction'>
		android:singleLine="true"
		android:imeOptions="actionGo"
	</#if>
	
	<#if name == 'fontFeatureSettings'>
		android:text="1/2 2/5"
		android:fontFamily="@font/nutso2"
	<#elseif name == 'gravity'>
		<#if widgetname == "StyledText">
		create-attr-count="1"
		create-attr-0="swtTextStyle"		
		swtTextStyle="multi|wrap"
		<#elseif process == "swt">
		<#if value == 'right' ||  value ==  'end'>
		create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="right"
		</#if>	
		<#if value == 'center_horizontal' ||  value == 'center'>
		create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="center"
		</#if>		
		</#if>
		
		android:text="${value}"
	<#elseif name == 'ellipsize'>
		android:lines="1"
	    android:singleLine="true"
	    create-attr-count="1"
		create-attr-0="swtTextStyle"
		swtTextStyle="none"
		android:text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod"
		<#if id == 1>
		selected="true"
		</#if>
	<#elseif localname == 'com.ashera.layout.Link' || localname == 'TextView' || localname == 'EditText' || localname == 'Button' || localname == 'CheckBox' || localname == 'RadioButton' || localname == 'ToggleButton' || localname == 'Switch'>
		<#if name == 'minWidth' || name == 'minEms'>
		android:text="Lorem "
		android:background="#ff0000"
		<#elseif localname == 'EditText' && (name = 'imeOptions' || name = 'inputType')>
		android:text="${value}"
		<#elseif localname == 'EditText' && (name = 'autoText' || name = 'capitalize' || name = 'digits' || name='hintTextFormat' || name='hint' || name=='phoneNumber' || name='iosPlaceholder' || name='numeric' || name='textColorHint')>
		android:text=""
		<#elseif name = 'minLines' || name = 'minHeight'>
		android:text="Lorem "
		<#elseif name == 'swtImage'>
		<#elseif name?starts_with('autoSize')>
			android:text="Lorem ipsum dolor sit http://www.google.com, a@a.com  consectetur +91808979930300 adipiscing elit"
		<#elseif name != 'text' && name != 'swtText' && name != 'html'>
		android:text="Lorem ipsum dolor sit http://www.google.com, a@a.com  consectetur +91808979930300 adipiscing elit, 620 Eighth Avenue New York, NY 10018 et dolore magna aliqua. Ut enim ad minim veniam, looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongtext quis nostrud exercitation" 
		</#if>
	</#if>
		
	<#if attrs.keys?has_content>
		android:hint="${value}"
	</#if>
	<#-- text view -->
	
</#compress>	
</#macro>

<#macro getTestValue attrs>
<#compress>
	<#if attrs.type?starts_with('dimension')>
		5dp
	<#elseif attrs.type == 'boolean'>
		true
	<#else>
		${attrs.type}
	</#if>
</#compress>	
</#macro>



<#macro getChildAdditionalAttrs attr index='1'>
<#compress>
<#if attr?starts_with('weightSum')>
android:layout_weight="1"
</#if>
<#if attr?starts_with('measureAllChildren')>
	android:visibility="gone"
</#if>

<#if attr == 'fillViewport'>
android:background="#f0f"
</#if>
<#if attr?starts_with('layout_row')>
	android:layout_column="${index}"
	android:layout_columnWeight="1"
    android:layout_gravity="fill"
    android:rowCount="3"
</#if>	
<#if attr?starts_with('layout_constraintHorizontal_bias')>
	app:layout_constraintLeft_toLeftOf="parent"
	app:layout_constraintRight_toRightOf="parent"
</#if>
<#if attr?starts_with('layout_constraintVertical_bias')>
	app:layout_constraintTop_toTopOf="parent"
	app:layout_constraintBottom_toBottomOf="parent"
</#if>

<#if attr?starts_with('layout_constraintHeight_') || attr?starts_with('layout_constraintWidth_') || attr?ends_with('_weight') || attr?ends_with('layout_constraintDimensionRatio')>
app:layout_constraintStart_toStartOf="parent"
android:background="#ff0000"
</#if>
	
<#if myclass.localName == 'ViewGroup' && (attr == 'paddingRight' || attr == 'paddingEnd' || attr == 'layout_marginRight' || attr == 'layout_marginEnd')>
		android:layout_gravity="right"
</#if>
</#compress>	
</#macro>


<#macro getChildAttribute alais testcase namespace=''>
<#compress>
<#if alais?starts_with('layout_')>
<@getName name=alais namespace=namespace></@getName>="${testcase}"
</#if>
</#compress>	
</#macro>
<#macro getChildWidget myclass id attr testcase namespace=''>
<#compress>
	
	<@getChildWidget_DrawerLayout myclass=myclass id=id attr=attr testcase=testcase namespace=namespace></@getChildWidget_DrawerLayout>
	<#if myclass.localName == 'View' && attr == 'layoutDirection'>
	 <TextView
	            android:text="test ${testcase}"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content" />			 
	<#elseif myclass.localName == 'RadioGroup'>
	<RadioButton	
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	    <@getChildAdditionalAttrs attr=attr></@getChildAdditionalAttrs>${'\n'}
	    android:id="@+id/radio${(id * 2) + id}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="wrap_content"
		android:text="Test ${testcase}"></RadioButton>
	<RadioButton
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	    <@getChildAdditionalAttrs attr=attr></@getChildAdditionalAttrs>${'\n'}
	    android:id="@+id/radio${(id * 2) + id + 1}"	    
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="wrap_content"
		android:text="Test1 ${testcase}"></RadioButton>		
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr == 'layout_constrainedWidth'>    
	    <TextView
	            android:text="Hello this is an example with constraint width"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:id="@+id/button"
	            app:layout_constraintEnd_toEndOf="parent"
	            app:layout_constraintStart_toStartOf="@+id/guideline"
	            <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	            android:layout_marginTop="16dp"
	            app:layout_constraintTop_toTopOf="parent" />			

	    <androidx.constraintlayout.widget.Guideline
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:layout_constraintGuide_end="100dp"
            android:id="@+id/guideline"
            android:orientation="vertical"/>
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr == 'layout_constrainedHeight'>    
	    <TextView
	            android:text="Hello this is an example with constraint height sda asd adsa sad sad adas asd asd ads asd asdas dasdas dasd asdasd asdasda asd asda as"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:id="@+id/button"
	            app:layout_constraintEnd_toEndOf="parent"
	            app:layout_constraintStart_toStartOf="parent"
	            app:layout_constraintTop_toBottomOf="@+id/guideline"
	            <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'} />			

	    <androidx.constraintlayout.widget.Guideline
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:layout_constraintGuide_end="100dp"
            android:id="@+id/guideline"
            android:orientation="horizontal"/>
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr?starts_with('layout_constraintGuide')>    
	    <androidx.constraintlayout.widget.Guideline
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/guideline"
            <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
            android:orientation="vertical"/>

	    <TextView
	            android:text="TextView"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:id="@+id/button"
	            app:layout_constraintLeft_toLeftOf="@+id/guideline"
	            android:layout_marginTop="16dp"
	            app:layout_constraintTop_toTopOf="parent" />	
	            
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr == 'layout_constraintVertical_weight'>
	    <TextView
			app:layout_constraintVertical_weight="10"
			app:layout_constraintTop_toTopOf="parent"
			app:layout_constraintBottom_toTopOf="@+id/text1"
			android:background="#ff0000"
			android:id="@+id/text0"
			android:layout_width="wrap_content"
			android:layout_height="0dp"
			android:text="Test 10"></TextView>
					            
			<TextView
			app:layout_constraintVertical_weight="10"
			app:layout_constraintTop_toBottomOf="@+id/text0"
			app:layout_constraintBottom_toBottomOf="parent"
			android:background="#ff00ff"
			android:id="@+id/text1"
			android:layout_width="wrap_content"
			android:layout_height="0dp"
			android:text="Test 10"></TextView>	    
	  <#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr == 'layout_constraintHorizontal_weight'>
	    <TextView
			app:layout_constraintHorizontal_weight="10"
			app:layout_constraintStart_toStartOf="parent"
			app:layout_constraintEnd_toStartOf="@+id/text1"
			android:background="#ff0000"
			android:id="@+id/text0"
			android:layout_width="0dp"
			android:layout_height="wrap_content"
			android:text="Test 10"></TextView>
					            
			<TextView
			app:layout_constraintHorizontal_weight="10"
			app:layout_constraintStart_toEndOf="@+id/text0"
			app:layout_constraintEnd_toEndOf="parent"
			android:background="#ff00ff"
			android:id="@+id/text1"
			android:layout_width="0dp"
			android:layout_height="wrap_content"
			android:text="Test 10"></TextView>
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr == 'layout_constraintVertical_chainStyle'>
		<androidx.constraintlayout.widget.ConstraintLayout 
	    android:layout_width="match_parent"
	    android:layout_height="300dp">
	
	    <TextView
	        android:id="@+id/view1"
	        android:layout_width="wrap_content"
	        android:layout_height="wrap_content"
	        android:text="View 1"
	        <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	        app:layout_constraintTop_toTopOf="parent"
	        app:layout_constraintBottom_toTopOf="@+id/view2"
	        app:layout_constraintRight_toRightOf="parent"
	        app:layout_constraintLeft_toLeftOf="parent" />
	
	    <TextView
	        android:id="@+id/view2"
	        android:layout_width="wrap_content"
	        android:layout_height="wrap_content"
	        android:text="View 2"
	        app:layout_constraintTop_toBottomOf="@+id/view1"
	        app:layout_constraintBottom_toTopOf="@+id/view3"
	        app:layout_constraintVertical_chainStyle="packed"
	        app:layout_constraintRight_toRightOf="parent"
	        app:layout_constraintLeft_toLeftOf="parent" />
	
	    <TextView
	        android:id="@+id/view3"
	        android:layout_width="wrap_content"
	        android:layout_height="wrap_content"
	        android:text="View 3"
	        app:layout_constraintTop_toBottomOf="@+id/view2"
	        app:layout_constraintBottom_toBottomOf="parent"
	        app:layout_constraintVertical_chainStyle="packed"
	        app:layout_constraintRight_toRightOf="parent"
	        app:layout_constraintLeft_toLeftOf="parent" />
		</androidx.constraintlayout.widget.ConstraintLayout>		
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr == 'layout_constraintHorizontal_chainStyle'>
		<androidx.constraintlayout.widget.ConstraintLayout
	                android:layout_width="match_parent"
	                android:layout_height="wrap_content" >

	                <TextView
	                    android:id="@+id/textView"
	                    android:layout_width="wrap_content"
	                    android:layout_height="wrap_content"
	                    android:layout_marginTop="16dp"
	                    app:layout_constraintEnd_toStartOf="@+id/textView2"
	                    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	                    app:layout_constraintStart_toStartOf="parent"
	                    app:layout_constraintTop_toTopOf="parent"
	                    android:text="${testcase}" />

	                <TextView
	                    android:id="@+id/textView2"
	                    android:layout_width="wrap_content"
	                    android:layout_height="wrap_content"
	                    android:layout_marginTop="16dp"
	                    app:layout_constraintEnd_toStartOf="@+id/textView3"
	                    app:layout_constraintStart_toEndOf="@+id/textView"
	                    app:layout_constraintTop_toTopOf="parent"
	                    tools:layout_editor_absoluteX="141dp"
	                    tools:text="TextView" />

	                <TextView
	                    android:id="@+id/textView3"
	                    android:layout_width="wrap_content"
	                    android:layout_height="wrap_content"
	                    android:layout_marginTop="16dp"
	                    app:layout_constraintEnd_toEndOf="parent"
	                    app:layout_constraintStart_toEndOf="@+id/textView2"
	                    app:layout_constraintTop_toTopOf="parent"
	                    tools:text="TextView" />
	            </androidx.constraintlayout.widget.ConstraintLayout>
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr?starts_with('layout_gone')>
 	<TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView2"
        <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	    <#if attr=='layout_goneMarginStart' || attr=='layout_goneMarginLeft'> app:layout_constraintStart_toEndOf="@+id/textView1"</#if>
	    <#if attr=='layout_goneMarginTop'> app:layout_constraintTop_toBottomOf="@+id/textView1"</#if>
	    <#if attr=='layout_goneMarginBottom'> app:layout_constraintBottom_toTopOf="@+id/textView1"</#if> 
	    <#if attr=='layout_goneMarginEnd' || attr=='layout_goneMarginRight'> app:layout_constraintEnd_toStartOf="@+id/textView1"</#if>/>

	<TextView
		app:layout_constraintTop_toTopOf="parent"
        android:id="@+id/textView0"
        android:layout_width="wrap_content"
        android:layout_height="80dp"
        android:text=" ** "
        borderWidth="2dp"
        borderColor="black"
        borderStyle="solid" />
    <TextView
		app:layout_constraintTop_toBottomOf="@+id/textView0"
        android:id="@+id/textView1"
        <#if attr=='layout_goneMarginEnd' || attr=='layout_goneMarginRight'> app:layout_constraintEnd_toEndOf="parent"</#if>
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView1"
        android:visibility="gone" />

   

    <TextView
		app:layout_constraintTop_toBottomOf="@+id/textView2"
        android:id="@+id/textView3"
        <#if attr=='layout_goneMarginEnd' || attr=='layout_goneMarginRight'> app:layout_constraintEnd_toEndOf="parent"</#if>
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView3"
        android:visibility="visible" />

    <TextView
        android:id="@+id/textView4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView4"
        <#if attr!='layout_goneMarginTop'>app:layout_constraintTop_toBottomOf="@+id/textView2"</#if>
        <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	    <#if attr=='layout_goneMarginStart' || attr=='layout_goneMarginLeft'> app:layout_constraintStart_toEndOf="@+id/textView3"</#if>
	    <#if attr=='layout_goneMarginTop'> app:layout_constraintTop_toBottomOf="@+id/textView3"</#if>
	    <#if attr=='layout_goneMarginBottom'> app:layout_constraintBottom_toTopOf="@+id/textView3"</#if> 
	    <#if attr=='layout_goneMarginEnd' || attr=='layout_goneMarginRight'> app:layout_constraintEnd_toStartOf="@+id/textView3"</#if>/>
	
	<#elseif myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr?index_of('Left') == -1 && attr?index_of('Right') == -1
			&& attr?index_of('Start') == -1 && attr?index_of('End') == -1 && attr?index_of('Top') == -1 && attr?index_of('Bottom') == -1>
		<TextView	
		    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
		    <@getChildAdditionalAttrs attr=attr></@getChildAdditionalAttrs>${'\n'}    
		    android:id="@+id/text${(id * 2) + id}"
			android:layout_width="${getChildWidth(attr)}"
		 	android:layout_height="${getChildHeight(attr)}"
			android:text="Test ${testcase}"></TextView>				
	<#elseif myclass.localName == 'RelativeLayout' || myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout'>
	<TextView
	    widget-override-swt="StyledLabel"
	    <#if myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr!='layout_constraintTop_toTopOf'>
		app:layout_constraintTop_toTopOf="parent"
		</#if>	
	    android:layout_marginTop="30dp"
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	    <@getChildAdditionalAttrs attr=attr></@getChildAdditionalAttrs>${'\n'}    
	    android:id="@+id/text${(id * 2) + id}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="wrap_content"
		android:text="Test 0 ${testcase}"></TextView>
		<TextView		
		    widget-override-swt="StyledLabel"	
		<#if myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout' && attr!='layout_constraintTop_toTopOf'>
		app:layout_constraintTop_toTopOf="parent"
		</#if>
		android:layout_marginTop="40dp"   
	    android:id="@+id/text${(id * 2) + id + 1}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="60dp"
		android:text="Test 1 ${testcase}"></TextView>	
		
		<TextView	
		    widget-override-swt="StyledLabel"	
	 	android:layout_marginTop="50dp"	   
	    android:id="@+id/text${(id * 2) + id + 2}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="60dp"
	 	<#if myclass.localName == 'RelativeLayout'>
	 	android:layout_toRightOf="@+id/text${(id * 2) + id + 1}"
	 	</#if>
	 	<#if myclass.group == 'androidx.constraintlayout.widget.ConstraintLayout'>
	 	app:layout_constraintTop_toTopOf="parent"
	 	app:layout_constraintLeft_toRightOf="@+id/text${(id * 2) + id + 1}"
	 	</#if>
		android:text="Test 2 some text ${testcase}"></TextView>	
	<#elseif myclass.localName == 'ScrollView' || myclass.localName == 'HorizontalScrollView'>		
		<TextView	
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	    <@getChildAdditionalAttrs attr=attr></@getChildAdditionalAttrs>${'\n'}    
	    android:id="@+id/text${(id * 2) + id}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="wrap_content"
		android:text="Test ${testcase}"></TextView>	
		
	<#elseif myclass.localName == 'TableLayout'>
	<TableRow 
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
		    <@getChildAdditionalAttrs attr=attr index='1'></@getChildAdditionalAttrs>${'\n'}    
		    android:id="@+id/text${(id * 2) + id}"
			android:layout_width="${getChildWidth(attr)}"
		 	android:layout_height="wrap_content">
		<TextView	
		    android:layout_height="${getTestHeightInternal(attr, myclass.group)}"
		    android:layout_width="wrap_content"
			android:text="Test ${testcase}"></TextView>
		<TextView	
		    android:layout_height="${getTestHeightInternal(attr, myclass.group)}"
		    android:layout_width="wrap_content"
			android:text="Test ${testcase}"></TextView>
	</TableRow>
	<TableRow 
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	 	<@getChildAdditionalAttrs attr=attr index='2'></@getChildAdditionalAttrs>${'\n'}    
	    android:id="@+id/text${(id * 2) + id + 1}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="wrap_content">
		<TextView	
		    android:layout_height="${getTestHeightInternal(attr, myclass.group)}"
		    android:layout_width="wrap_content"
			android:text="Test ${testcase}"></TextView>
		<TextView	
		    android:layout_height="${getTestHeightInternal(attr, myclass.group)}"
		    android:layout_width="wrap_content"
			android:text="Test ${testcase}"></TextView>
	</TableRow>
	<#elseif myclass.localName=='ListView' ||  myclass.localName=='androidx.recyclerview.widget.RecyclerView' || myclass.localName=='androidx.drawerlayout.widget.DrawerLayout'  || myclass.localName=='androidx.appcompat.widget.Toolbar' || myclass.localName=='com.ashera.datetime.DatePicker' || myclass.localName=='com.ashera.datetime.TimePicker'>
	<#elseif myclass.widgetSuperClass == 'ViewGroupImpl' || myclass.localName=='ViewGroup'>
	<TextView	
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	    <@getChildAdditionalAttrs attr=attr index='1'></@getChildAdditionalAttrs>${'\n'}    
	    android:id="@+id/text${(id * 2) + id}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="wrap_content"
		android:text="Test ${testcase}"></TextView>
		<TextView	
	    <@getChildAttribute alais=attr testcase=testcase namespace=namespace></@getChildAttribute>${'\n'}
	 	<@getChildAdditionalAttrs attr=attr index='2'></@getChildAdditionalAttrs>${'\n'}    
	    android:id="@+id/text${(id * 2) + id + 1}"
		android:layout_width="${getChildWidth(attr)}"
	 	android:layout_height="wrap_content"
		android:text="Test ${testcase}"></TextView>
	</#if>
</#compress>	
</#macro>

<#function getChildWidth attr>
	<#assign width='wrap_content'>
	<#if attr?starts_with('layout_constraintWidth_')  || attr?starts_with('layout_constraintHorizontal_weight')>
		<#assign width='0dp'>
	</#if> 
	<#if attr?starts_with('weightSum')>
		<#assign width='0dp'>
	</#if>
	<#return width>
</#function>

<#function getChildHeight attr>
	<#assign height='wrap_content'>
	<#if attr?starts_with('layout_constraintHeight_') || attr?starts_with('layout_constraintVertical_weight') || attr?starts_with('layout_constraintDimensionRatio')>
		<#assign height='0dp'>
	</#if> 
	<#return height>
</#function>

<#function getTestWidth attrs localname>
	<#assign width='match_parent'> 
	
	<#if localname == 'androidx.constraintlayout.helper.widget.Flow'>
		<#assign height='0dp'>
	</#if>
	<#if attrs.trimmedAttribute?starts_with('layout_')>
		<#return width>
	</#if>
	
		
	<#if localname == 'View' && attrs.trimmedAttribute?starts_with('padding') && !attrs.trimmedAttribute?starts_with('paddingVertical') && !attrs.trimmedAttribute?starts_with('paddingTop') && !attrs.trimmedAttribute?starts_with('paddingBottom') >
		<#return 'wrap_content'>
	</#if>
	
	
	<#if attrs.trimmedAttribute?starts_with('minWidth') || attrs.trimmedAttribute?starts_with('maxWidth') || attrs.trimmedAttribute == 'width' || attrs.trimmedAttribute?starts_with('maxEms') || attrs.trimmedAttribute?starts_with('ems') || attrs.trimmedAttribute?starts_with('minEms')>
		<#assign width='wrap_content'>
	</#if>
	<#if localname == 'ImageView' && attrs.trimmedAttribute == 'scaleType'>
		<#assign width='300dp'>
	</#if>
	
	<#return width>
</#function>

<#function getTestHeight attrs localname>
	<#assign name='${attrs.trimmedAttribute}'>
	<#return getTestHeightInternal(name, localname)>
</#function>


<#function getTestHeightInternal name localname>
	<#assign height='wrap_content'>
	
	<#if localname == 'androidx.drawerlayout.widget.DrawerLayout'>
		<#assign height='100dp'>
	</#if>
	
	<#if localname == 'ListView'>
		<#assign height='300dp'>
	</#if>
	
	<#if localname == 'androidx.constraintlayout.helper.widget.Flow'>
		<#assign height='0dp'>
	</#if>
	
	<#if name == 'layout_gravity'>
		<#assign height='80dp'>
	</#if>
	<#if localname == 'RelativeLayout'>
		<#assign height='150dp'>
	</#if>
		
	<#if (name == 'fillViewport' || name?starts_with('layout_')) && localname == 'ScrollView'>
		<#assign height='150dp'>
	</#if>
	
	<#if (name?starts_with('layout_')) && localname == 'HorizontalScrollView'>
		<#assign height='150dp'>
	</#if>
	
	<#if name == 'layout_constraintVertical_bias' || name?starts_with('layout_constraintGuide') || name?starts_with('layout_constraintHeight_percent')
			|| name == 'layout_constraintVertical_weight' || name == 'layout_constrainedHeight'>
		<#assign height='200dp'>
	</#if>
	<#if name?starts_with('layout_')>
		<#return height>
	</#if>
	 	
	<#if name == 'gravity'>
		<#assign height='80dp'>
	</#if>
	<#if name?starts_with('autoSize')>
		<#assign height='210dp'>
	</#if>
	<#if localname == 'ImageView' && name == 'scaleType'>
		<#assign height='300dp'>
	</#if>
	
	<#return height>
</#function>

<#function getTestCaseStatus attrs>
	<#assign background='#000'> 
	<#if  attrs.xmlTest?? && attrs.xmlTest?starts_with('pass')>
		<#assign background='#90EE90'>
	</#if>
	<#if  attrs.xmlTest?? && attrs.xmlTest?starts_with('quirk')>
		<#assign background='#FFC922'>
	</#if>
	<#if  attrs.xmlTest?? && attrs.xmlTest?starts_with('fail')>
		<#assign background='#FF0000'>
	</#if>
	<#if  attrs.xmlTest?? && attrs.xmlTest?starts_with('notsure')>
		<#assign background='#FFFF00'>
	</#if>

	<#return background>
</#function>


<#macro getVisibilityMacro attrs>
<#compress>
<#if attrs.trimmedAttribute != 'visibility'>
android:visibility="${getVisibility(attrs)}"
</#if>
</#compress>	
</#macro>

<#function getVisibility attrs>
	<#assign visibility='visible'> 
	<#if  attrs.xmlTest?? && attrs.xmlTest?starts_with('pass') && !myclass.makeTestCaseVisible>
		<#assign visibility='gone'>
	</#if>
	<#return visibility>
</#function>
<#function getTestCases attrs>
	<#assign array=[]>
	
	<#assign myarray=getTestCases_TextView(attrs)>
	<#if myarray?has_content>
		<#return myarray>
	</#if>

	<#assign myarray=getTestCases_Recycleview(attrs)>
	<#if myarray?has_content>
		<#return myarray>
	</#if>
	
	<#assign myarray=getTestCases_Toolbar(attrs)>
	<#if myarray?has_content>
		<#return myarray>
	</#if>
	
	<#assign myarray=getTestCases_Spinner(attrs, myclass.localName)>
	<#if myarray?has_content>
		<#return myarray>
	</#if>
	
	<#assign myarray=getTestCases_DrawerLayout(attrs, myclass.localName)>
	<#if myarray?has_content>
		<#return myarray>
	</#if>	
	<#assign myarray=getTestCases_DatePicker(attrs, myclass.localName)>
	<#if myarray?has_content>
		<#return myarray>
	</#if>
	
	<#assign myarray=getTestCases_ProgressBar(attrs, myclass.localName)>
	<#if myarray?has_content>
		<#return myarray>
	</#if>	
	
	<#if attrs.type == 'dimensionsp'>
		<#assign array = array + ["10sp"]>
	<#elseif attrs.trimmedAttribute == 'childXml'>
		<#assign array = array + ["&lt;TextView text=&quot;test1234&quot;&gt;&lt;/TextView&gt;"]>		
	<#elseif attrs.trimmedAttribute == 'content'>
		<#assign array = array + ["@+id/sampleWidget"]>	
	<#elseif attrs.trimmedAttribute == 'accessibilityTraversalAfter' || attrs.trimmedAttribute == 'accessibilityTraversalBefore'>	
		<#assign array = array + ["@+id/testSetAndGetTest"]>		
	<#elseif attrs.trimmedAttribute== 'scaleX' || attrs.trimmedAttribute== 'scaleY'>
		<#assign array = array + ["1.2", "1.3"]>		
	<#elseif attrs.trimmedAttribute== 'alpha'>
		<#assign array = array + ["0.3", "0.5"]>
	<#elseif attrs.trimmedAttribute?starts_with('next')>
		<#assign array = array + ["@+id/sampleWidget"]>
	<#elseif attrs.trimmedAttribute == 'param'>		
		<#assign array = array + ["let testMap = testObj from testObj->view into view as map"]>
	<#elseif attrs.trimmedAttribute == 'modelFor'>
		<#assign array = array + ["let item in textlayout from items->view into loopvar as pathmap"]>
	<#elseif attrs.type?ends_with('.constraintReferencedIds')>
		<#assign array = array + ["text1"]>
	<#elseif attrs.trimmedAttribute == 'layout_constraintHorizontal_bias' || attrs.trimmedAttribute == 'layout_constraintVertical_bias' || attrs.trimmedAttribute?ends_with('Bias')>
		<#assign array = array + ["0.3", "0.5"]>
	<#elseif attrs.trimmedAttribute == 'layout_constraintGuide_percent' || attrs.trimmedAttribute == 'layout_constraintWidth_percent' || attrs.trimmedAttribute == 'layout_constraintHeight_percent'>
		<#assign array = array + ["0.5"]>	
	<#elseif attrs.trimmedAttribute == 'layout_weight'>
		<#assign array = array + ["1", "2"]>
	<#elseif attrs.trimmedAttribute?starts_with("on")>
		<#assign array = array + [attrs.trimmedAttribute]>		
	<#elseif attrs.type == 'dimensionsppxint'>
		<#assign array = array + ["34px", "13sp"]>		
	<#elseif attrs.type == 'xmlresource'>
		<#assign array = array + ["@xml/extra_data"]>
	<#elseif attrs.type == 'dimensionspint'>
		<#assign array = array + ["10sp"]>
	<#elseif attrs.trimmedAttribute == 'textAppearance' || attrs.trimmedAttribute == 'switchTextAppearance'>
		<#assign array = array + ["@style/CustomTextStyle"]>		
	<#elseif attrs.trimmedAttribute == 'fontFeatureSettings'>
		<#assign array = array + ["afrc"]>
	<#elseif attrs.trimmedAttribute == 'privateImeOptions'>
		<#assign array = array + [""]>		
	<#elseif attrs.trimmedAttribute == 'onEditorAction'>
		<#assign array = array + ["onEditorAction"]>			
	<#elseif attrs.keys?has_content>
	 	<#assign array = array + attrs.keys>	
	 	<#if attrs.supportIntegerAlso>
	 		<#assign array = array + ["1", "2", "3"]>
	 	</#if>	
	<#elseif attrs.trimmedAttribute == 'weightSum'>
		<#assign array = array + ["2"]>			 	
	<#elseif attrs.type == 'float'>
		<#if attrs.trimmedAttribute == 'iosMinimumScaleFactor'>
			<#assign array = array + ["0.7", "0.1"]>
		<#else>
			<#assign array = array + ["10", "20"]>
		</#if>		
	<#elseif attrs.trimmedAttribute == 'drawablePadding'>
		<#assign array = array + ["10dp", "10dp"]>
	<#elseif attrs.trimmedAttribute == 'digits'>
		<#assign array = array + ["1234"]> 
	<#elseif attrs.type?starts_with('dimensionpx')>
		<#assign array = array + ["20px"]> 				
	<#elseif attrs.type?starts_with('dimension')>
		<#if attrs.trimmedAttribute?starts_with('maxHeight') || attrs.trimmedAttribute?starts_with('minHeight') || attrs.trimmedAttribute?starts_with('height')>
			<#assign array = array + ["50dp", "50dp"]>
		<#elseif attrs.trimmedAttribute?starts_with('minWidth') || attrs.trimmedAttribute?starts_with('maxWidth') || attrs.trimmedAttribute?starts_with('width')>
			<#assign array = array + ["50dp"]>
		<#elseif attrs.trimmedAttribute?ends_with('_min')>
			<#assign array = array + ["150dp"]>
		<#else>
			<#assign array = array + ["10dp"]> 
		</#if>
	<#elseif attrs.trimmedAttribute == 'imageFromUrl'>
		<#assign array = array + ["https://sample-videos.com/img/Sample-jpg-image-50kb.jpg", "https://picsum.photos/200"]>				
	<#elseif attrs.trimmedAttribute?starts_with('drawable') || attrs.type == 'image' || attrs.trimmedAttribute="src" || attrs.type?starts_with('colorimage') || attrs.type == 'drawable'>
		<#if attrs.trimmedAttribute?ends_with('Tint')>
			<#assign array = array + ["#ff0000", "@color/bg", "@color/color_state"]>
		<#else>
			<#if attrs.trimmedAttribute?starts_with('swt') || attrs.type == 'image'>
				<#assign array = array + ["@drawable/cross3"]>
			<#else>
				<#assign array = array + ["@drawable/cross3", "@drawable/button_selector", "@drawable/focused_selector", "@drawable/hovered_selector", "@drawable/drawable_color_selector", "@drawable/shape_line_drawable", "@null"]>
			</#if>	
		</#if>
	<#elseif attrs.type == 'colorstate'>
		<#assign array = array + ["#ff0000", "@color/bg", "@color/color_state"]>
	<#elseif attrs.type?starts_with('color') || attrs.trimmedAttribute?ends_with('Tint')>
		<#assign array = array + ["#ff0000", "@color/bg"]>
	<#elseif attrs.type == 'boolean'>
		<#assign array = array + ["true", "false"]>
	<#elseif attrs.type == 'resourcestring'>
		<#assign array = array + ["test", "@string/sample_text", "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod"]>				
	<#elseif attrs.trimmedAttribute == 'baselineAlignedChildIndex'>
		<#assign array = array + ["0", "1"]>
	<#elseif attrs.trimmedAttribute == 'layout_span'>
		<#assign array = array + ["1", "2"]>	
	<#elseif attrs.type == 'int'>
		<#assign array = array + ["1", "2", "3"]>
	<#elseif attrs.type?starts_with('font')>
		<#assign array = array + ['@font/quicksand" android:textStyle="normal', '@font/quicksand" android:textStyle="bold', '@font/quicksand" android:textStyle="italic']>
	 <#elseif attrs.trimmedAttribute == 'foregroundGravity'>
		<#assign array = array + ["top", "bottom", "left", "right", "center_vertical", "fill_vertical", "center_horizontal", "center", "fill", "clip_vertical",  "clip_horizontal", "fill_horizontal"]>
	 <#elseif attrs.type == 'gravity'>
		<#assign array = array + ["top", "bottom", "left", "right", "center_vertical", "fill_vertical", "center_horizontal", "center", "fill", "clip_vertical",  "clip_horizontal", "start", "end", "fill_horizontal"]>			
	<#elseif attrs.trimmedAttribute == 'swtOrientation' || attrs.trimmedAttribute == 'swtTextDirection'>
		<#assign array = array + ["left_to_right", "right_to_left"]>
	<#elseif attrs.trimmedAttribute == 'checkedButton'>
		<#assign array = array + ["@+id/radio1"]>
	<#elseif (attrs.trimmedAttribute == 'ignoreGravity')>
		<#assign array = array + ["@+id/text0"]>	
	<#elseif (attrs.trimmedAttribute?starts_with('layout_') && attrs.type= 'id')>
		<#assign array = array + ["@+id/text1"]>
	<#elseif attrs.trimmedAttribute == 'collapseColumns' || attrs.trimmedAttribute == 'shrinkColumns' || attrs.trimmedAttribute == 'stretchColumns'>
		<#assign array = array + ["*", "1"]>
	<#elseif attrs.trimmedAttribute == 'layout_constraintDimensionRatio'>
		<#assign array = array + ["2:1", "1:2"]>
	<#elseif attrs.trimmedAttribute == 'format'>
		<#assign array = array + ["%s test", "test %s"]>
	<#elseif myclass.localName == 'com.ashera.ui.android.Model'>
		<#assign array = array + [""]>
	<#elseif attrs.trimmedAttribute == 'swtBackgroundMode'>
		<#assign array = array + ["inherit_none", "inherit_default", "inherit_force"]>
	<#elseif (attrs.trimmedAttribute?contains('border') || attrs.trimmedAttribute?contains('Border')) && (attrs.trimmedAttribute?contains('Style'))>		
		<#assign array = array + ["dashed", "dotted", "solid"]>
	<#elseif attrs.trimmedAttribute == 'transitionName'>	
		<#assign array = array + ["test"]>			
	<#elseif attrs.trimmedAttribute == 'fileExtension'>
		<#assign array = array + ["png"]>		
	<#elseif attrs.trimmedAttribute == 'asDragSource'>
		<#assign array = array + ["emailIntent=testObj.emailIntent from testObj->view"]>	
	<#elseif attrs.trimmedAttribute == 'autofillHints'>
		<#assign array = array + ["postAddress"]>		
	<#elseif attrs.trimmedAttribute == 'layout_constraintTag'>
		<#assign array = array + ["test"]>		
	<#elseif attrs.trimmedAttribute == 'circularflow_angles'>
		<#assign array = array + ["0,45,90,180"]>
	<#elseif attrs.trimmedAttribute == 'circularflow_radiusInDP'>
		<#assign array = array + ["10,20,40,60"]>
	<#elseif attrs.trimmedAttribute == 'circularflow_viewCenter'>
		<#assign array = array + ["@+id/viewCenter"]>
	<#elseif attrs.trimmedAttribute == 'viewId'>
		<#assign array = array + ["@+id/add_dynamic"]>
	<#elseif attrs.trimmedAttribute == 'swtAttachEventBubbler'>
		<#assign array = array + ["mousedown"]>
	<#elseif attrs.trimmedAttribute == 'autoSizePresetSizes'>
		<#assign array = array + ["@array/autosize_text_sizes1"]>
	<#elseif attrs.trimmedAttribute == 'linearGradientBackground'>
		<#assign array = array + ["#000,#fff"]>			
	<#elseif attrs.type == 'array'>
		<#assign array = array + ["@array/autosize_text_sizes"]>
	<#elseif attrs.trimmedAttribute == 'listfooter' || attrs.trimmedAttribute=='listheader'>
		<#assign array = array + ["@layout/listfooter"]>
	<#elseif attrs.trimmedAttribute == 'validateForm'>	
		<#assign array = array + ["test"]>
	<#elseif attrs.trimmedAttribute == 'style' || attrs.trimmedAttribute == 'errorStyle'>
		<#assign array = array + ["@style/blackBg"]>
	<#elseif attrs.trimmedAttribute?starts_with("v_")>
		<#if attrs.trimmedAttribute == 'v_max' || attrs.trimmedAttribute == 'v_min' || attrs.trimmedAttribute == 'v_maxlength' || attrs.trimmedAttribute == 'v_minlength'>
			<#assign array = array + ["2"]>
		<#elseif attrs.trimmedAttribute == 'required'>
			<#assign array = array + [""]>
		<#elseif attrs.trimmedAttribute == 'pattern'>
			<#assign array = array + ["[a-z]*"]>
		<#elseif attrs.trimmedAttribute == 'type '>
			<#assign array = array + ["email"]>
		</#if>
	<#elseif attrs.trimmedAttribute?starts_with("orientation")>
		<#assign array = array + ["horizontal", "vertical"]>
	<#elseif attrs.trimmedAttribute == 'webTabIndex'>
		<#assign array = array + ["1", "2"]>	
	<#elseif attrs.trimmedAttribute == 'webOverflow'>
		<#assign array = array + ["auto", "hidden"]>	
	<#else>
		<#assign array = array + [attrs.type]>
	</#if>
	<#return array>
</#function>
<#macro getAttribute alais testcase namespace=''>
<#compress>
<#if !alais?starts_with('layout_') && !alais?contains('Model')>
<@getName name=alais namespace=namespace></@getName>="${testcase}"
</#if>
</#compress>	
</#macro>
<#macro getWrapperParentStart>
<#if myclass.group == 'TableRow'>
	<TableLayout android:layout_width="match_parent" android:layout_height="wrap_content">
</#if>
<#if myclass.group == 'androidx.constraintlayout.widget.Guideline'>
	<androidx.constraintlayout.widget.ConstraintLayout android:layout_width="match_parent" android:layout_height="wrap_content">
</#if>

<#if myclass.group == 'androidx.constraintlayout.helper.widget.Flow' || myclass.group == 'androidx.constraintlayout.helper.widget.CircularFlow'>
	<androidx.constraintlayout.widget.ConstraintLayout android:layout_width="match_parent" android:layout_height="200dp">
</#if>

</#macro>

<#macro getWrapperParentEnd name=''>
<#if myclass.group == 'TableRow'>
	</TableLayout>
</#if>
<#if myclass.group == 'androidx.constraintlayout.widget.Guideline'>
	</androidx.constraintlayout.widget.ConstraintLayout>
</#if>
    
    <#if myclass.group == 'androidx.constraintlayout.helper.widget.CircularFlow'>
    <View
        android:background="#ffff00"
        android:id="@+id/viewCenter"
        android:layout_width="2dp"
        app:layout_constraintLeft_toLeftOf="parent"
		app:layout_constraintRight_toRightOf="parent"
		app:layout_constraintTop_toTopOf="parent"
		app:layout_constraintBottom_toBottomOf="parent"
        android:layout_height="2dp" />
    </#if>
<#if myclass.group == 'androidx.constraintlayout.helper.widget.Flow' || myclass.group == 'androidx.constraintlayout.helper.widget.CircularFlow'>
	<View
	    android:background="#000"
        android:id="@+id/item_1"
        android:layout_width="25dp"
        android:layout_height="50dp" />
    <View
        android:background="#ff0"
        android:id="@+id/item_2"
        android:layout_width="50dp"
        android:layout_height="25dp" />
    <View
        android:background="#ff0000"
        android:id="@+id/item_3"
        android:layout_width="50dp"
        android:layout_height="50dp" />
    <View
        android:background="#ff0"
        android:id="@+id/add_dynamic"
        android:layout_width="50dp"
        android:layout_height="25dp" />
    <#if (name == 'flow_wrapMode' || name?lower_case?contains('vertical') || name == 'flow_maxElementsWrap' || name == 'flow_horizontalAlign') && (name != 'flow_verticalBias')>
    <View
        android:background="#ff0"
        android:id="@+id/item_4"
        android:layout_width="50dp"
        android:layout_height="25dp" />
    <View
        android:background="#ff0000"
        android:id="@+id/item_5"
        android:layout_width="50dp"
        android:layout_height="50dp" />
    <View
        android:background="#ff0"
        android:id="@+id/item_6"
        android:layout_width="50dp"
        android:layout_height="25dp" />
    <View
        android:background="#ff0000"
        android:id="@+id/item_7"
        android:layout_width="50dp"
        android:layout_height="50dp" />
    <View
        android:background="#ff0"
        android:id="@+id/item_8"
        android:layout_width="50dp"
        android:layout_height="25dp" />
    <View
        android:background="#ff0000"
        android:id="@+id/item_9"
        android:layout_width="50dp"
        android:layout_height="50dp" />
    <View
        android:background="#ff0"
        android:id="@+id/item_10"
        android:layout_width="50dp"
        android:layout_height="25dp" />
    <View
        android:background="#ff0000"
        android:id="@+id/item_11"
        android:layout_width="50dp"
        android:layout_height="50dp" />
    <View
        android:background="#ff0"
        android:id="@+id/item_12"
        android:layout_width="50dp"
        android:layout_height="25dp" />
    <View
        android:background="#ff0000"
        android:id="@+id/item_13"
        android:layout_width="50dp"
        android:layout_height="50dp" />
    </#if>
	</androidx.constraintlayout.widget.ConstraintLayout>
</#if>
</#macro>

<#function getClassGroup>
	<#if myclass.viewPluginFor??>
		<#return myclass.viewPluginFor>
	<#elseif myclass.group == 'ViewGroup'>
		<#return 'FrameLayout'>
	</#if>
	<#return myclass.group>
</#function>

<#function getWidgetOverrideName name value=''>
	<#if myclass.group == 'KeyboardManager'>
		<#return 'EditText'>
	</#if>
	<#if myclass.viewPluginFor??>
		<#return myclass.viewPluginFor>
	</#if>
	<#if myclass.group == 'ViewGroup'>
		<#return 'FrameLayout'>
	</#if>
	
	<#if name == 'screenReaderFocusable' || name =='defaultFocusHighlightEnabled'>
		<#return myclass.localName>
	</#if>
	
	<#if name == 'onTouch' && process = 'ios'>
		<#return 'Button'>
	</#if>
	<#if name == 'soundEffectsEnabled'>
		<#return 'Button'>
	</#if>
	<#if name == 'fadeScrollbars' || name == 'fadingEdgeLength'>
		<#return 'ScrollView'>
	</#if>
	<#if myclass.group == 'View' && (name?contains('focus') || name?contains('Focus')) || name == 'autofillHints' || name == 'onKey'>
		<#return 'EditText'>
	</#if>
	
	<#if name == 'selected'>
		<#return 'Button'>
	</#if>
	<#if name=='textDirection' || name=='textAlignment' ||  myclass.group == 'View' && (name == 'swtOrientation' || name == 'swtTextDirection' || name='accessibilityLiveRegion')>
		<#return 'TextView'>
	</#if>
	<#if  myclass.group == 'View' && name=='layoutDirection'>
		<#return 'FrameLayout'>
	</#if>
	
	<#if  myclass.group == 'View' && value=='@drawable/focused_selector'>
		<#return 'EditText'>
	</#if>
	
	<#if myclass.group == 'View' && (name?contains('maxWidth') || name?contains('maxHeight'))>
		<#return 'TextView'>
	</#if>	
	
	<#return myclass.localName>
</#function>
<#function getSampleWidgetHeight localname>
	<#assign height='wrap_content'>
	
	<#if localname == 'androidx.drawerlayout.widget.DrawerLayout'>
		<#assign height='100dp'>
	</#if>
	<#return height>
</#function>
<#function getSampleWidgetWidth localname>
	<#assign width='wrap_content'>
	
	<#if localname == 'androidx.drawerlayout.widget.DrawerLayout'>
		<#assign width='100dp'>
	</#if>
	<#return width>
</#function>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">
	<#include "/templates/Macros.java">

    <data></data>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">
           
			<!-- start body -->
            <#list allAttributes as attrs>
				<#if attrs.trimmedAttribute != 'attributeUnderTest' && attrs.trimmedAttribute != 'id'>
		            <TextView
		                style="@style/blackBg"
		                android:background="${getTestCaseStatus(attrs)}"		                
		                android:layout_width="match_parent"
		                android:layout_height="wrap_content"
		                <@getVisibilityMacro attrs=attrs></@getVisibilityMacro>
		                android:text="${attrs.trimmedAttribute}"
		                onClick="onClick${attrs.trimmedAttribute}"></TextView>
		            <#assign testcases = getTestCases(attrs)>
					<#if testcases?? && testcases?has_content>
					<#assign x = 0 >
					<#list testcases as testcase>
		            <@getWrapperParentStart></@getWrapperParentStart>
		            <${getClassGroup()}
		            	<@getVisibilityMacro attrs=attrs></@getVisibilityMacro>
	            		widget-override="${getWidgetOverrideName(attrs.trimmedAttribute, testcase)}"
		            	android:id="@+id/${attrs.trimmedAttribute}${x}"
		                android:layout_width="${getTestWidth(attrs, myclass.group)}"
		                android:layout_height="${getTestHeight(attrs, myclass.group)}"
		                <@getAdditinalAttrs attrs=attrs name=attrs.trimmedAttribute value=testcase id=x localname=myclass.group widgetname=myclass.localName></@getAdditinalAttrs>${'\n'}
		                <@getAttribute namespace=attrs.namespace alais=attrs.trimmedAttribute testcase=testcase></@getAttribute>><@getChildWidget myclass=myclass namespace=attrs.namespace id=x attr=attrs.trimmedAttribute testcase=testcase></@getChildWidget></${getClassGroup()}>
		              	<@getWrapperParentEnd name=attrs.trimmedAttribute></@getWrapperParentEnd>
		             <#assign x = x + 1 >
	            </#list>
	            </#if>
	            </#if>
			</#list>
			<#list allAttributes as attrs>
				<#list attrs.aliases as alais>
	            <TextView
	                <@getVisibilityMacro attrs=attrs></@getVisibilityMacro>
	                style="@style/blackBg"
	                android:background="${getTestCaseStatus(attrs)}"
	                android:layout_width="match_parent"
	                android:layout_height="wrap_content"
	                android:padding="10dp"
	                android:gravity="center"
	                android:text="${alais}"></TextView>
	            <#assign testcases = getTestCases(attrs)>
	            <#if testcases?? && testcases?has_content>
	            <#assign x = 0 >
				<#list testcases as testcase>	
					<@getWrapperParentStart></@getWrapperParentStart>
		            <${getClassGroup()}
		            	<@getVisibilityMacro attrs=attrs></@getVisibilityMacro>
		            	widget-override="${getWidgetOverrideName(attrs.trimmedAttribute, testcase)}"
		                android:layout_width="${getTestWidth(attrs, myclass.group)}"
		                android:layout_height="${getTestHeight(attrs, myclass.group)}"
		                <@getAdditinalAttrs attrs=attrs name=alais value=testcase id=x localname=myclass.group widgetname=myclass.localName></@getAdditinalAttrs>${'\n'}
		                <@getAttribute namespace=attrs.namespace alais=alais testcase=testcase></@getAttribute>>
		                <@getChildWidget namespace=attrs.namespace myclass=myclass id=x attr=alais testcase=testcase></@getChildWidget></${getClassGroup()}>
		             <@getWrapperParentEnd name=attrs.trimmedAttribute></@getWrapperParentEnd>
	                <#assign x = x + 1 >
	            </#list> 
	            </#if>
	            </#list>
			</#list>
			<TextView
			    	android:id="@+id/testSetAndGetTest"
	                style="@style/blackBg"
	                android:layout_width="match_parent"
	                android:layout_height="wrap_content"
	                android:text="Test Set and Get Test"></TextView>
			<@getWrapperParentStart></@getWrapperParentStart>			
			<${getClassGroup()}
	            	widget-override="${getWidgetOverrideName('')}"
	                android:layout_width="${getSampleWidgetWidth(myclass.group)}"
	                android:layout_height="${getSampleWidgetHeight(myclass.group)}"
	                android:id="@+id/sampleWidget"><@getChildWidget myclass=myclass id=0 attr='' testcase=''></@getChildWidget></${getClassGroup()}>
	         <@getWrapperParentEnd></@getWrapperParentEnd>
	         <Button android:layout_width="match_parent"
	                android:layout_height="wrap_content"
	                android:text="Start" android:onClick="testGetAndSet"></Button>
	         ${extraCode}
	           <!-- body end -->
        </LinearLayout>
    </ScrollView>

</layout>

